// Generated by CoffeeScript 1.2.1-pre
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; },
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  define(['backbone', 'cs!search'], function(Backbone, Search) {
    var DJ, DJList, DJView, DJs, djs, init, sp, ui, views;
    sp = getSpotifyApi(1);
    views = sp.require("sp://import/scripts/api/views");
    ui = sp.require("sp://import/scripts/ui");
    DJ = (function(_super) {

      __extends(DJ, _super);

      DJ.name = 'DJ';

      function DJ() {
        return DJ.__super__.constructor.apply(this, arguments);
      }

      DJ.prototype.initialize = function() {
        return this.name = "test";
      };

      return DJ;

    })(Backbone.Model);
    DJs = (function(_super) {

      __extends(DJs, _super);

      DJs.name = 'DJs';

      function DJs() {
        return DJs.__super__.constructor.apply(this, arguments);
      }

      DJs.prototype.model = DJ;

      return DJs;

    })(Backbone.Collection);
    djs = new DJs();
    DJView = (function(_super) {

      __extends(DJView, _super);

      DJView.name = 'DJView';

      function DJView() {
        this.render = __bind(this.render, this);
        return DJView.__super__.constructor.apply(this, arguments);
      }

      DJView.prototype.template = _.template('<li><%= name %></li>');

      DJView.prototype.render = function() {
        return this.template(this.model.toJSON());
      };

      return DJView;

    })(Backbone.View);
    DJList = (function(_super) {

      __extends(DJList, _super);

      DJList.name = 'DJList';

      function DJList() {
        this.render = __bind(this.render, this);
        return DJList.__super__.constructor.apply(this, arguments);
      }

      DJList.prototype.initialize = function() {
        return djs.on('add', this.render);
      };

      DJList.prototype.el = "#dj-list";

      DJList.prototype.render = function(dj) {
        var djView;
        djView = new DJView({
          model: dj
        });
        return this.$el.append(djView.render());
      };

      return DJList;

    })(Backbone.View);
    init = function() {
      var djsView, socket;
      djs = new DJs();
      djsView = new DJList();
      socket = io.connect('http://localhost:7070');
      return socket.on('djs', function(data) {
        return _(data).each(function(jsonDJ) {
          var dj;
          dj = new DJ();
          dj.set(jsonDJ);
          return djs.add(dj);
        });
      });
    };
    return {
      init: init
    };
  });

}).call(this);
